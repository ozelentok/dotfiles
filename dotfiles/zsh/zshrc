[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && which startx > /dev/null && exec startx

setopt histignorealldups sharehistory
bindkey -e

HISTSIZE=100000
SAVEHIST=100000
HISTFILE=$HOME/.zsh_history
setopt APPEND_HISTORY
setopt PATH_DIRS
setopt AUTO_CD
setopt CORRECT
setopt PROMPT_SUBST
eval "$(/usr/bin/dircolors -b)"

fpath=($DOTFILES_ROOT/dotfiles/zsh/completions $fpath)
autoload -Uz compinit && compinit -i

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:messages' format '%F{purple}-- %d --%f'
zstyle ':completion:*:descriptions' format '%F{yellow}-- %d --%f'
zstyle ':completion:*:corrections' format '%F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:warnings' format '%F{red}-- No matches for:%f %d --'
# Ignore case
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,cmd'

autoload -U url-quote-magic bracketed-paste-magic
zle -N self-insert url-quote-magic
zle -N bracketed-paste bracketed-paste-magic

if [ "$DOTFILES_IS_DEVELOPER" -eq 1 ]; then
  autoload -Uz vcs_info
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*' get-revision true
  zstyle ':vcs_info:*' use-simple true
  zstyle ':vcs_info:*' unstagedstr '%F{red}✗ %f'
  zstyle ':vcs_info:*' stagedstr '%F{blue}✓ %f'
  zstyle ':vcs_info:*' formats '%u%c%F{green}[%b]%f'
  zstyle ':vcs_info:*' actionformats ' %F{blue}%b%f %F{white}%.7i%f +%a%u'
  zstyle ':vcs_info:git*+set-message:*' hooks git-status

  function precmd() {
    function clear_vcs_info() {
      unset vcs_info_msg_0_
    }

    case $PWD/ in
      /bin/*)   clear_vcs_info;;
      /boot/*)  clear_vcs_info;;
      /dev/*)   clear_vcs_info;;
      /lib/*)   clear_vcs_info;;
      /lib64/*) clear_vcs_info;;
      /mnt/*)   clear_vcs_info;;
      /proc/*)  clear_vcs_info;;
      /run/*)   clear_vcs_info;;
      /sbin/*)  clear_vcs_info;;
      /sys/*)   clear_vcs_info;;
      /usr/*)   clear_vcs_info;;
      /var/*)   clear_vcs_info;;
      *) vcs_info;;
    esac
  }
fi

ZLE_RPROMPT_INDENT=0
ZVM_INIT_MODE=sourcing
ENABLE_ZVM=1

PROMPT_START='%K{25} %n@%m %F{25}%K{235} %f%~ %k%F{235}%f'
PROMPT_START+=$'\n'
PROMPT_START+='%K{22} %(!.#.$) %F{22}'
if [ $ENABLE_ZVM -ne 0 ]; then
  PROMPT_START+='%K{235}%f'
  PROMPT="${PROMPT_START} I %k%F{235}%f"
else
  PROMPT_START+='%k%f'
  PROMPT=${PROMPT_START}
fi
if [ "$DOTFILES_IS_DEVELOPER" -eq 1 ]; then
  RPROMPT='${vcs_info_msg_0_} %B%F{12}[%D{%H:%M:%S}]%b%f'
else
  RPROMPT='%B%F{12}[%D{%H:%M:%S}]%b%f'
fi

function zvm_after_select_vi_mode() {
  case $ZVM_MODE in
    $ZVM_MODE_INSERT)
      PROMPT="${PROMPT_START} I %k%F{235}%f"
      ;;
    $ZVM_MODE_NORMAL)
      PROMPT="${PROMPT_START}%F{11}%B N %b%k%F{235}%f"
      ;;
    $ZVM_MODE_VISUAL)
      PROMPT="${PROMPT_START}%F{208}%B V %b%k%F{235}%f"
      ;;
    $ZVM_MODE_VISUAL_LINE)
      PROMPT="${PROMPT_START}%F{208}%B B %b%k%F{235}%f"
      ;;
    $ZVM_MODE_REPLACE)
      PROMPT="${PROMPT_START}%F{1}%B R %b%k%F{235}%f"
      ;;
  esac
}

up-line-or-local-history() {
  zle set-local-history 1
  zle up-line-or-history
  zle set-local-history 0
}
down-line-or-local-history() {
  zle set-local-history 1
  zle down-line-or-history
  zle set-local-history 0
}

# Arrows local history
bindkey "^[OA" up-line-or-local-history
bindkey "^[OB" down-line-or-local-history
zle -N up-line-or-local-history
zle -N down-line-or-local-history

# Home and End
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line
bindkey "${terminfo[khome]}" beginning-of-line
bindkey "${terminfo[kend]}" end-of-line
# Insert and Delete
bindkey "${terminfo[kich1]}" overwrite-mode
bindkey "${terminfo[kdch1]}" delete-char
# Pageup and Pagedown
bindkey "${terminfo[kpp]}" beginning-of-buffer-or-history
bindkey "${terminfo[knp]}" end-of-buffer-or-history
# Ctrl-Left and Ctrl-Right
bindkey "\e[5C" forward-word
bindkey "\e[5D" backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
bindkey "\e[1;5C" forward-word
bindkey "\e[1;5D" backward-word
bindkey -M vicmd '^[[1;5C' forward-word
bindkey -M vicmd '^[[1;5D' backward-word
bindkey -M viins '^[[1;5C' forward-word
bindkey -M viins '^[[1;5D' backward-word

function zle-line-init () {
  echoti smkx
}
function zle-line-finish () {
  echoti rmkx
}

if [ -n "${DISPLAY:-}" ]; then
  zle -N zle-line-init
  zle -N zle-line-finish
fi

# Edit current command in editor
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# Colored man
man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
  }

# Color aliases
if [ -x /usr/bin/dircolors ]; then
  alias ls='ls --color=auto --group-directories-first'
  alias dir='dir --color=auto'
  alias vdir='vdir --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# GNU ls aliases
# alias ll='ls -lFhX --time-style=long-iso'
# alias la='ls -A'

# LSDeluxe aliases
alias la='lsd -A'
alias ll='lsd -lFX'
alias lla='lsd -lFXA'
alias lsd='lsd -1'
alias l='lsd'

alias rm='rm -I'
alias ranger='. ranger'

alias tt='cd /tmp'
alias 11='cd /tmp/1-imgs'
alias pwf='sudo poweroff'
alias rbt='sudo reboot'
alias psu='ps -lFww --ppid 2 -p 2 --deselect'
alias cpptags='ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++'

rdp() {
  rdesktop $1 -g 1920x1060 -u $2 -z -0 -r clipboard:CLIPBOARD ${@:3}
}

jp() {
  convert "${1}" "${1%.*}.jpg"
}

# Zsh Vi Mode
if [ $ENABLE_ZVM -ne 0 ]; then
  source $DOTFILES_ROOT/dotfiles/zsh/zsh-vi-mode/zsh-vi-mode.plugin.zsh
fi

source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
export FZF_COMPLETION_TRIGGER=''
bindkey '^T' fzf-completion
bindkey '^I' "$fzf_default_completion"

