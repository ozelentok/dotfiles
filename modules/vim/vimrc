set nocompatible
" vundle requires filetype to be off
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'bling/vim-airline'
Bundle 'kien/ctrlp.vim'
Bundle 'Shougo/neocomplete'
Bundle 'Shougo/neosnippet'
Bundle 'Shougo/neosnippet-snippets'
Bundle 'kchmck/vim-coffee-script'
Bundle 'digitaltoad/vim-jade'
Bundle 'tpope/vim-fugitive'
Bundle 'davidhalter/jedi-vim'

"General
filetype plugin indent on
set directory=/tmp
set backupdir=/tmp
set backup
syntax on
set showcmd
set hlsearch
set incsearch
set ignorecase
set wildmenu
set wildmode=full
set wildignore=*.swp,.bak,*.pyc,*.class,*.o,*.obj
set wildignorecase
set autoindent
set number
set shiftwidth=2
set tabstop=2
set noexpandtab
set guifont=Ubuntu\ Mono\ ZPower\ 15
set mouse=a
set laststatus=2
set encoding=utf-8
set spellsuggest=best,10
set dictionary=/usr/share/dict/cracklib-small
set textwidth=0

"Colorscheme
colors colosus
hi Normal ctermbg=none
imap ii <Esc>
command! W w
" map c-h/j/k/l to move between windows
nmap <c-h> <c-w>h
nmap <c-j> <c-w>j
nmap <c-k> <c-w>k
nmap <c-l> <c-w>l
" Navigation
noremap <space> 20j
vnoremap <space> 20j
noremap - 20k
vnoremap - 20k
"Resize
nnoremap _ <c-w>-
nnoremap + <c-w>+
nnoremap > <c-w>>
nnoremap < <c-w><
" Yank and paste using + register (works on X11 clipboard)
" Switch to * register in windows
noremap <Leader>ey "+Y
vnoremap <Leader>ey "+y
noremap <Leader>ep "+p
noremap tp :tabp<cr>
" From https://github.com/skwp/dotfiles/blob/master/vim/plugin/settings/stop-visual-paste-insanity.vim:
" If you visually select something and hit paste
" that thing gets yanked into your buffer. This
" generally is annoying when you're copying one item
" and repeatedly pasting it. This changes the paste
" command in visual mode so that it doesn't overwrite
" whatever is in your paste buffer.
vnoremap p "_dP
map <Leader>" ysiw"

"Syntastic
let g:syntastic_mode_map = { "mode": "active",
                           \ "active_filetypes": [],
                           \ "passive_filetypes": ['sass', 'scss', 'haml', 'html']}
let g:syntastic_check_on_open = 1
let g:syntastic_enable_signs = 1

"neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 0
" Plugin key-mappings.
inoremap <expr><C-g> neocomplete#undo_completion()
inoremap <expr><C-l> neocomplete#complete_common_string()
" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplete#close_popup()
inoremap <expr><C-e>  neocomplete#cancel_popup()

"neosnippet
" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

"Airline
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_branch_prefix = '⭠'
let g:airline_readonly_symbol = '⭤'
let g:airline_linecolumn_prefix = '⭡'
let g:airline_theme='powerlineish'
let g:airline_detect_whitespace=1

"NERDTree Window Toogle
noremap <Leader>nt :NERDTreeToggle<cr>

"Toggles hebrew and right to left
imap <f2> <c-o> ToggleHebrew() <cr>
map <f2> :call ToggleHebrew() <cr>

" FileType
autocmd BufRead,BufEnter *.js setlocal nocindent smartindent
autocmd BufRead,BufEnter *.json setlocal filetype=javascript
au BufWritePost *.coffee silent call CoffeeMake()
autocmd BufRead,BufEnter *.vs setlocal filetype=c
autocmd BufRead,BufEnter *.fs setlocal filetype=c

" Autocomplete
set omnifunc=syntaxcomplete#Complete
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html setlocal autoindent omnifunc=htmlcomplete#CompleteTags
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS

func! CoffeeMake()
	if getline(1) =~ 'autocompile'
		silent make
		redraw!
		cw
	endif
endfunc

func! ToggleHebrew()
	if &rl
		set norl
		set keymap=
	else
		set rl
		set keymap=hebrew
	end
endfunc

